# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    app.registration.confirmation.template: '@@Front/User/Registration/email.txt.twig'
    app.resetting.email.template: '@@Front/User/Resetting/email.txt.twig'
    app.contact.template: '@@Front/contact.txt.twig'
    app.contact.from_email: 'shonen.shojo@gmail.com'
services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    
    app.security.acl_manager: 
        class: AppBundle\Security\AclSecurityManager
        public: true
        arguments:
            - '@security.acl.provider'
            - '@security.token_storage'
            - '@security.authorization_checker'
    
    ###
    # Util
    ###
    app.util.media: 
        class: AppBundle\Util\MediaUtil
        public: true
        arguments:
            - '@stof_doctrine_extensions.uploadable.manager'
            - '%web_directory%'
    AppBundle\Util\MediaUtil: '@app.util.media'
   
    app.util.route:
        class: AppBundle\Util\RouteUtil
        public: true
        arguments:
            - '@router'
            - '@request_stack'
            
    app.util.payment:
        class: AppBundle\Util\PaymentUtil
        public: true
        
    security.password_encoder:
        class: Symfony\Component\Security\Core\Encoder\UserPasswordEncoder
        public: true
    
    ###
    # Event
    ###
    app.event_subscriber.maintenance_mode:
        class: AppBundle\EventSubscriber\MaintenanceModeSubscriber
        arguments:
            - '@app.doctrine.util'
            - '@security.token_storage'
            - '@security.authorization_checker'
            - '@twig'
            - '%kernel.environment%'
    AppBundle\EventSubscriber\MaintenanceModeSubscriber: '@app.event_subscriber.maintenance_mode'
    
    ###
    # Mailer
    ###
    app.mailer.twig_swift_mailer:
        class: AppBundle\Mailer\TwigSwiftMailer
        public: true
        arguments: 
            - '@mailer'
            - '@router'
            - '@twig'
            - 
                template:
                    confirmation: '%app.registration.confirmation.template%'
                    resetting: '%app.resetting.email.template%'
                    contact: '%app.contact.template%'
                from_email:
                    confirmation: '%fos_user.registration.confirmation.from_email%'
                    resetting: '%fos_user.resetting.email.from_email%'
                    contact: '%app.contact.from_email%'
    AppBundle\Mailer\TwigSwiftMailer: '@app.mailer.twig_swift_mailer'
    
    ###
    # Twig Extensions
    ###
#    app.twig.extension.simple_form:
#        class: AppBundle\Twig\Extensions\SimpleFormExtension
#        tags: ['twig.extension']
#        
#    app.twig.extension.simple_snippet:
#        class: AppBundle\Twig\Extensions\SimpleSnippetExtension
#        tags: ['twig.extension']    
#    
#    app.twig.extension.asset:
#        class: AppBundle\Twig\Extensions\AssetExtension
#        tags: ['twig.extension']  
#        arguments:
#            - '@app.util.media'
#            
#    app.twig.extension.payment:
#        class: AppBundle\Twig\Extensions\PaymentExtension
#        tags: ['twig.extension']       

    ###
    # Doctrine
    ###
    app.doctrine.util:
        class: AppBundle\Doctrine\DoctrineUtil
        public: true
        arguments:
            - '@doctrine.orm.entity_manager'

    ###
    # Knp Menu
    ###
    app.front_menu_builder:
        class: AppBundle\Menu\FrontMenuBuilder
        public: true
        arguments: 
            - '@knp_menu.factory'
            - '@request_stack'
            - '@security.token_storage'
            - '@security.authorization_checker'
            - '@translator'
            - '@app.util.route'
        tags:
            - { name: knp_menu.menu_builder,    method: createMainMenu,            alias: frontMain }
            - { name: knp_menu.menu_builder,    method: createProfileMenu,         alias: profileMenu }
            - { name: knp_menu.menu_builder,    method: createLogoutMenu,          alias: logoutMenu }
            - { name: knp_menu.menu_builder,    method: createUserAccountMenu,     alias: userAccountMenu }
            - { name: knp_menu.menu_builder,    method: createSidebarMenu,         alias: sidebarMenu }
            - { name: knp_menu.menu_builder,    method: createMainMobileMenu,      alias: mainMobileMenu }
            - { name: knp_menu.menu_builder,    method: createFooterMenu,           alias: footerMenu }
            
    app.admin_menu_builder:
        class: AppBundle\Menu\AdminMenuBuilder
        public: true
        arguments: 
            - '@knp_menu.factory'
            - '@request_stack'
            - '@security.token_storage'
            - '@security.authorization_checker'
            - '@translator'
            - '@app.util.route'
        tags:
            - { name: knp_menu.menu_builder,    method: createMainMenu,        alias: adminMain }
            - { name: knp_menu.menu_builder,    method: createSidebarMenu,     alias: adminSidebar }
            
    ###
    # Form
    ###
    app.form.type.order_carte:
        class: AppBundle\Form\Type\Payment\OrderCarteType
        arguments:
            - '@payment.plugin_controller.entity'
            - 
                paypal_express_checkout: JMS\Payment\PaypalBundle\Form\ExpressCheckoutType
    
    ###
    # Alias
    ###
    JMS\Payment\CoreBundle\PluginController\PluginControllerInterface: '@payment.plugin_controller.entity'
    
    ###
    # Commands
    ###
    AppBundle\Command\CreateAdminUserCommand:
        tags:
            - { name: 'console.command', command: 'app:user:create-admin' }
    