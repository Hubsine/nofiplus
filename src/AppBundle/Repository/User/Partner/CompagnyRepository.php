<?php

namespace AppBundle\Repository\User\Partner;

use Doctrine\ORM\QueryBuilder;
use AppBundle\Repository\RepositoryTrait;
use AppBundle\Entity\User\Partner\Partner;

/**
 * CompagnyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CompagnyRepository extends \Doctrine\ORM\EntityRepository
{
    const ALIAS = 'e';
    
    use RepositoryTrait;
    
    public function findAllByForIndex(Partner $partner)
    {
        $qb   = $this->createQueryBuilder(self::ALIAS)
                ->where('e.partner = :partner')
                ->setParameter('partner', $partner);
        
        $this->joinWithLogo($qb);
        $this->joinWithAddress($qb, 'e');
        $this->joinWithCategory($qb);
        
        return $qb->getQuery()->getResult();
    }
    
    public function findAllByForShow(Partner $partner)
    {
        $qb   = $this->createQueryBuilder(self::ALIAS)
                ->where('e.partner = :partner')
                ->setParameter('partner', $partner);
        
        $this->joinWithLogo($qb);
        $this->joinWithAddress($qb, 'e');
        $this->joinWithCategory($qb);
        $this->joinWithOffres($qb);
        
        return $qb->getQuery()->getResult();
    }
    
    ###
    # Joins
    ###
    public function joinWithLogo(QueryBuilder $qb)
    {
        $qb
            ->leftJoin('e.logo', 'logo')
            ->addSelect('logo');
        
        return $qb;
    }
    
    public function joinWithCategory(QueryBuilder $qb)
    {
        $qb
            ->leftJoin('e.category', 'category')
            ->addSelect('category');
        
        return $qb;
    }
    
    public function joinWithOffres(QueryBuilder $qb)
    {
        $qb
            ->leftJoin('e.offres', 'offre')
            ->addSelect('offre')
            ->leftJoin('offre.featured', 'featured')
            ->addSelect('featured')
                ;
        
        return $qb;
    }
}
